# Generated by Django 5.2.6 on 2025-10-03 03:33

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SearchIndex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index_name', models.CharField(max_length=100, unique=True)),
                ('index_path', models.CharField(max_length=500)),
                ('metadata_path', models.CharField(max_length=500)),
                ('embedding_model', models.CharField(default='all-MiniLM-L6-v2', max_length=100)),
                ('dimension', models.IntegerField(default=384)),
                ('total_vectors', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Study',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('authors', models.TextField(blank=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('journal', models.CharField(blank=True, max_length=500)),
                ('pmcid', models.CharField(max_length=50, unique=True)),
                ('pmc_url', models.URLField()),
                ('abstract', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Studies',
                'ordering': ['-year', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('entity_type', models.CharField(choices=[('organism', 'Organism'), ('tissue', 'Tissue/System'), ('stressor', 'Stressor'), ('platform', 'Platform/Mission'), ('assay', 'Assay/Method'), ('outcome', 'Outcome'), ('other', 'Other')], max_length=20)),
                ('canonical_id', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['entity_type', 'name'],
                'unique_together': {('name', 'entity_type')},
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_type', models.CharField(choices=[('abstract', 'Abstract'), ('introduction', 'Introduction'), ('methods', 'Methods'), ('results', 'Results'), ('discussion', 'Discussion'), ('conclusions', 'Conclusions'), ('other', 'Other')], max_length=20)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('content', models.TextField()),
                ('order', models.IntegerField(default=0)),
                ('study', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='ingestion.study')),
            ],
            options={
                'ordering': ['study', 'order'],
                'unique_together': {('study', 'section_type', 'order')},
            },
        ),
        migrations.CreateModel(
            name='EvidenceSentence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sentence_text', models.TextField()),
                ('sentence_index', models.IntegerField()),
                ('char_start', models.IntegerField()),
                ('char_end', models.IntegerField()),
                ('embedding_vector', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sentences', to='ingestion.section')),
                ('study', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evidence_sentences', to='ingestion.study')),
            ],
            options={
                'ordering': ['study', 'section', 'sentence_index'],
                'unique_together': {('study', 'section', 'sentence_index')},
            },
        ),
        migrations.CreateModel(
            name='Triple',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation', models.CharField(max_length=100)),
                ('qualifiers', models.TextField(blank=True, default='{}')),
                ('confidence', models.FloatField(default=1.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('evidence_sentence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ingestion.evidencesentence')),
                ('object_entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='object_triples', to='ingestion.entity')),
                ('study', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='triples', to='ingestion.study')),
                ('subject_entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject_triples', to='ingestion.entity')),
            ],
            options={
                'ordering': ['study', 'subject_entity', 'relation', 'object_entity'],
            },
        ),
    ]
